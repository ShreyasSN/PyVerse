# Contact Manager
# This is a simple command-line contact manager that allows users to 
# add, view, and delete contacts from a list. Each contact consists of 
# a name and a phone number.

class Contact:
    def __init__(self, name, phone):
        self.name = name
        self.phone = phone

    def __str__(self):
        return f"{self.name}: {self.phone}"

class ContactManager:
    def __init__(self):
        self.contacts = []

    def add_contact(self, name, phone):
        new_contact = Contact(name, phone)
        self.contacts.append(new_contact)
        print(f"Contact '{name}' added.")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
        else:
            print("Contacts:")
            for contact in self.contacts:
                print(contact)

    def delete_contact(self, name):
        for contact in self.contacts:
            if contact.name == name:
                self.contacts.remove(contact)
                print(f"Contact '{name}' deleted.")
                return
        print(f"Contact '{name}' not found.")

def main():
    manager = ContactManager()
    
    while True:
        print("\nContact Manager")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Delete Contact")
        print("4. Exit")

        choice = input("Choose an option (1-4): ")

        if choice == '1':
            # Adding a contact
            name = input("Enter contact name: ")  
            phone = input("Enter contact phone number: ")  
            manager.add_contact(name, phone)
            

        elif choice == '2':
            # Viewing contacts
            manager.view_contacts()
         

        elif choice == '3':
            # Deleting a contact
            name = input("Enter contact name to delete: ")  
            manager.delete_contact(name)
       

        elif choice == '4':
            print("Exiting the Contact Manager. Goodbye!")
            break

        else:
            print("Invalid choice. Please select a valid option.")

# Run the Contact Manager
if __name__ == "__main__":
    main()

# Sample Interaction
# Contact Manager
# 1. Add Contact
# 2. View Contacts
# 3. Delete Contact
# 4. Exit
# Choose an option (1-4): 1
# Enter contact name: Alice
# Enter contact phone number: 123-456-7890
# Contact 'Alice' added.

# Contact Manager
# 1. Add Contact
# 2. View Contacts
# 3. Delete Contact
# 4. Exit
# Choose an option (1-4): 2
# Contacts:
# Alice: 123-456-7890

# Contact Manager
# 1. Add Contact
# 2. View Contacts
# 3. Delete Contact
# 4. Exit
# Choose an option (1-4): 3
# Enter contact name to delete: Alice
# Contact 'Alice' deleted.
